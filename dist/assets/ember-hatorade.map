{"version":3,"sources":["vendor/ember-cli/app-prefix.js","ember-hatorade/adapters/application.js","ember-hatorade/app.js","ember-hatorade/components/infinity-loader.js","ember-hatorade/controllers/application.js","ember-hatorade/controllers/array.js","ember-hatorade/controllers/object.js","ember-hatorade/controllers/stream.js","ember-hatorade/initializers/app-version.js","ember-hatorade/initializers/export-application-global.js","ember-hatorade/initializers/subdomain.js","ember-hatorade/models/hashtag.js","ember-hatorade/models/tweet.js","ember-hatorade/models/tweets.js","ember-hatorade/router.js","ember-hatorade/routes/about.js","ember-hatorade/routes/hashtags.js","ember-hatorade/routes/home.js","ember-hatorade/routes/stream.js","ember-hatorade/routes/tweets.js","ember-hatorade/templates/about.js","ember-hatorade/templates/application.js","ember-hatorade/templates/hashtags.js","ember-hatorade/templates/home.js","ember-hatorade/templates/stream.js","ember-hatorade/templates/tweets.js","ember-hatorade/tests/adapters/application.jshint.js","ember-hatorade/tests/app.jshint.js","ember-hatorade/tests/controllers/application.jshint.js","ember-hatorade/tests/controllers/stream.jshint.js","ember-hatorade/tests/helpers/resolver.js","ember-hatorade/tests/helpers/resolver.jshint.js","ember-hatorade/tests/helpers/start-app.js","ember-hatorade/tests/helpers/start-app.jshint.js","ember-hatorade/tests/models/hashtag.jshint.js","ember-hatorade/tests/models/tweet.jshint.js","ember-hatorade/tests/models/tweets.jshint.js","ember-hatorade/tests/router.jshint.js","ember-hatorade/tests/routes/about.jshint.js","ember-hatorade/tests/routes/hashtags.jshint.js","ember-hatorade/tests/routes/home.jshint.js","ember-hatorade/tests/routes/stream.jshint.js","ember-hatorade/tests/routes/tweets.jshint.js","ember-hatorade/tests/test-helper.js","ember-hatorade/tests/test-helper.jshint.js","ember-hatorade/tests/unit/adapters/application-test.js","ember-hatorade/tests/unit/adapters/application-test.jshint.js","ember-hatorade/tests/unit/controllers/stream-test.js","ember-hatorade/tests/unit/controllers/stream-test.jshint.js","ember-hatorade/tests/unit/models/hashtags-test.js","ember-hatorade/tests/unit/models/hashtags-test.jshint.js","ember-hatorade/tests/unit/models/tweet-test.js","ember-hatorade/tests/unit/models/tweet-test.jshint.js","ember-hatorade/tests/unit/models/tweets-test.js","ember-hatorade/tests/unit/models/tweets-test.jshint.js","ember-hatorade/tests/unit/routes/about-test.js","ember-hatorade/tests/unit/routes/about-test.jshint.js","ember-hatorade/tests/unit/routes/hashtags-test.js","ember-hatorade/tests/unit/routes/hashtags-test.jshint.js","ember-hatorade/tests/unit/routes/home-test.js","ember-hatorade/tests/unit/routes/home-test.jshint.js","ember-hatorade/tests/unit/routes/stream-test.js","ember-hatorade/tests/unit/routes/stream-test.jshint.js","ember-hatorade/tests/unit/routes/tweets-test.js","ember-hatorade/tests/unit/routes/tweets-test.jshint.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('ember-hatorade/adapters/application', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].RESTAdapter.extend({\n    namespace: 'api/v1',\n    host: 'http://api.hatora.de'\n  });\n\n});","define('ember-hatorade/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'ember-hatorade/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  var App;\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('ember-hatorade/components/infinity-loader', ['exports', 'ember-infinity/components/infinity-loader'], function (exports, infinityLoader) {\n\n\t'use strict';\n\n\texports['default'] = infinityLoader['default'];\n\n});","define('ember-hatorade/controllers/application', ['exports'], function (exports) {\n\n\t'use strict';\n\n\texports['default'] = Ember.Controller.extend({});\n\n});","define('ember-hatorade/controllers/array', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller;\n\n});","define('ember-hatorade/controllers/object', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Controller;\n\n});","define('ember-hatorade/controllers/stream', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    sortBy: 'id',\n    init: function init() {\n      this._super();\n      self = this;\n\n      var client = new Faye.Client('http://hatora.de:8080/faye');\n      var subscription = client.subscribe('/messages', function (message) {\n        var data = { tweet: message };\n        var serializer = self.store.serializerFor('tweet');\n        self.myMessageHandler(message);\n      });\n    },\n    myMessageHandler: function myMessageHandler(data) {\n      console.log(data);\n      var tweet = {\n        id: data.id_str,\n        text: data.text,\n        screen_name: data.user.screen_name,\n        favorite_count: data.favorite_count,\n        url: data.url,\n        profile_image: data.user.profile_image_url\n      };\n      self.store.push('tweet', tweet);\n    }\n\n  });\n  // self.model.unshiftObject(funtimes)\n\n});","define('ember-hatorade/initializers/app-version', ['exports', 'ember-hatorade/config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n  var registered = false;\n\n  exports['default'] = {\n    name: 'App Version',\n    initialize: function initialize(container, application) {\n      if (!registered) {\n        var appName = classify(application.toString());\n        Ember['default'].libraries.register(appName, config['default'].APP.version);\n        registered = true;\n      }\n    }\n  };\n\n});","define('ember-hatorade/initializers/export-application-global', ['exports', 'ember', 'ember-hatorade/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal && !window[classifiedName]) {\n      window[classifiedName] = application;\n    }\n  }\n\n  ;\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n\n});","define('ember-hatorade/initializers/subdomain', ['exports', 'ember', 'ember-hatorade/config/environment'], function (exports, Ember, ENV) {\n\n  'use strict';\n\n  var urlChecker = Ember['default'].Object.extend({\n\n    subdomain: (function () {\n      var regexParse = new RegExp('[a-z-0-9]{2,63}.[a-z.]{2,5}$');\n      var urlParts = regexParse.exec(this.get('hostname'));\n      if (urlParts) return this.normalize(this.get('hostname').replace(urlParts[0], '').slice(0, -1));else return this.normalize('');\n    }).property('hostname'),\n\n    hostname: (function () {\n      if (this.get('customURI')) {\n        return this.get('customURI');\n      } else {\n        return window.location.hostname;\n      }\n    }).property('customURI'),\n\n    normalize: function normalize(subdomain) {\n      return ENV['default'].subdomainMapping[subdomain] || subdomain;\n    },\n\n    customURI: ''\n\n  });\n\n  exports['default'] = {\n    name: 'subdomain',\n    initialize: function initialize(container, application) {\n      container.register('url-checker:main', urlChecker);\n      application.inject('route', 'urlChecker', 'url-checker:main');\n      application.inject('controller', 'urlChecker', 'url-checker:main');\n    },\n    urlChecker: urlChecker\n  };\n\n});","define('ember-hatorade/models/hashtag', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    text: DS['default'].attr()\n  });\n\n});","define('ember-hatorade/models/tweet', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    text: DS['default'].attr(),\n    screen_name: DS['default'].attr(),\n    created_at: DS['default'].attr(),\n    favorite_count: DS['default'].attr,\n    url: DS['default'].attr(),\n    profile_image: DS['default'].attr()\n\n  });\n\n});","define('ember-hatorade/models/tweets', ['exports', 'ember-data'], function (exports, DS) {\n\n\t'use strict';\n\n\texports['default'] = DS['default'].Model.extend({});\n\n});","define('ember-hatorade/router', ['exports', 'ember', 'ember-hatorade/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  Router.map(function () {\n    this.route('tweets');\n    this.route('home');\n    this.route('stream');\n    this.route('hashtags', function () {\n      this.route('show', { path: '/:text' }, function () {});\n    });\n    this.route('hashtagTweets', { path: 'hashtags/:text' }, function () {});\n    this.route('about');\n  });\n\n  exports['default'] = Router;\n\n});","define('ember-hatorade/routes/about', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('ember-hatorade/routes/hashtags', ['exports', 'ember', 'ember-infinity/mixins/route'], function (exports, Ember, InfinityRoute) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend(InfinityRoute['default'], {\n    model: function model() {\n      return this.infinityModel('hashtag', { perPage: 50, startingPage: 1 });\n    }\n  });\n\n});","define('ember-hatorade/routes/home', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('ember-hatorade/routes/stream', ['exports', 'ember', 'ember-infinity/mixins/route'], function (exports, Ember, InfinityRoute) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend(InfinityRoute['default'], {\n    model: function model() {\n      return this.infinityModel('tweet', { perPage: 50, startingPage: 1 });\n    },\n    actions: {\n      newTweet: function newTweet() {\n        var fun = { tweet: { id: 420, text: 'fun times', screen_name: 'voodoologic', favorite_count: 99, url: 'http://hatora.de', profile_image: 'http://placekitten.com/90/90' } };\n        console.log(this.currentModel);\n        funtimes = this.store.createRecord('tweet', fun.tweet);\n        this.currentModel.unshiftObject(funtimes);\n      }\n    }\n  });\n\n});","define('ember-hatorade/routes/tweets', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model() {\n      return this.store.find('tweet');\n    }\n  });\n\n});","define('ember-hatorade/templates/about', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.12.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h4\");\n        var el2 = dom.createElement(\"q\");\n        var el3 = dom.createTextNode(\"It's like Uber for haters\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h4\");\n        var el2 = dom.createTextNode(\"     - Nobody\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"Haters gonna hate.  We here at hatorade live this motto.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"Simply log in via twitter, visit your user name (i.e. rsherman_25.hatora.de) and haters visiting the site will be alerted that you need haters. \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"iframe\");\n        dom.setAttribute(el1,\"width\",\"420\");\n        dom.setAttribute(el1,\"height\",\"315\");\n        dom.setAttribute(el1,\"src\",\"https://www.youtube.com/embed/e7z_ztMxBgk\");\n        dom.setAttribute(el1,\"frameborder\",\"0\");\n        var el2 = dom.createTextNode(\"allowfullscreen\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,7,7,contextualElement);\n        dom.insertBoundary(fragment, null);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('ember-hatorade/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.12.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"home\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.12.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"stream\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.12.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"hashtags\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child3 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.12.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"about\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.12.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"container-fluid col-lg-8 col-lg-offset-2 col-md-8 col-md-offset-2\");\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"fun\");\n        var el3 = dom.createElement(\"h2\");\n        dom.setAttribute(el3,\"id\",\"title\");\n        var el4 = dom.createTextNode(\"Hatora.de\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"button\");\n        var el4 = dom.createTextNode(\"new tweet\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"ul\");\n        dom.setAttribute(el2,\"class\",\"nav nav-pills pull-left\");\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createElement(\"a\");\n        dom.setAttribute(el4,\"href\",\"http://blog.hatora.de\");\n        var el5 = dom.createTextNode(\"blog\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"li\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, element = hooks.element, block = hooks.block, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [0, 1]);\n        var element2 = dom.childAt(element0, [1]);\n        var morph0 = dom.createMorphAt(dom.childAt(element2, [0]),0,0);\n        var morph1 = dom.createMorphAt(dom.childAt(element2, [1]),0,0);\n        var morph2 = dom.createMorphAt(dom.childAt(element2, [2]),0,0);\n        var morph3 = dom.createMorphAt(dom.childAt(element2, [4]),0,0);\n        var morph4 = dom.createMorphAt(element0,2,2);\n        element(env, element1, context, \"action\", [\"newTweet\"], {});\n        block(env, morph0, context, \"link-to\", [\"home\"], {}, child0, null);\n        block(env, morph1, context, \"link-to\", [\"stream\"], {}, child1, null);\n        block(env, morph2, context, \"link-to\", [\"hashtags\"], {}, child2, null);\n        block(env, morph3, context, \"link-to\", [\"about\"], {}, child3, null);\n        content(env, morph4, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('ember-hatorade/templates/hashtags', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.12.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"li\");\n          dom.setAttribute(el1,\"class\",\"media row list-group-item col-lg-4\");\n          var el2 = dom.createElement(\"a\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, concat = hooks.concat, attribute = hooks.attribute, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [0, 0]);\n          var morph0 = dom.createMorphAt(element0,0,0);\n          var attrMorph0 = dom.createAttrMorph(element0, 'href');\n          attribute(env, attrMorph0, element0, \"href\", concat(env, [\"hashtags/\", get(env, context, \"hashtag.text\")]));\n          content(env, morph0, context, \"hashtag.text\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.12.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"ul\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"li\");\n        dom.setAttribute(el2,\"class\",\"media row list-group-item col-lg-4\");\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, inline = hooks.inline, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element1 = dom.childAt(fragment, [3]);\n        var morph0 = dom.createMorphAt(element1,0,0);\n        var morph1 = dom.createMorphAt(dom.childAt(element1, [1]),0,0);\n        var morph2 = dom.createMorphAt(fragment,4,4,contextualElement);\n        dom.insertBoundary(fragment, null);\n        block(env, morph0, context, \"each\", [get(env, context, \"model\")], {\"keyword\": \"hashtag\"}, child0, null);\n        inline(env, morph1, context, \"infinity-loader\", [], {\"infinityModel\": get(env, context, \"model\")});\n        content(env, morph2, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('ember-hatorade/templates/home', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.12.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"br\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h4\");\n        var el2 = dom.createTextNode(\"Home\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,3,3,contextualElement);\n        dom.insertBoundary(fragment, null);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('ember-hatorade/templates/stream', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.12.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"li\");\n          dom.setAttribute(el1,\"class\",\"media row list-group-item col-lg-12\");\n          var el2 = dom.createElement(\"img\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"h4\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"data col-lg-8 col-md-8 col-sm-8\");\n          var el3 = dom.createElement(\"p\");\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"a\");\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, attribute = hooks.attribute, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [0]);\n          var element1 = dom.childAt(element0, [0]);\n          var element2 = dom.childAt(element0, [2]);\n          var element3 = dom.childAt(element2, [1]);\n          var attrMorph0 = dom.createAttrMorph(element1, 'src');\n          var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),0,0);\n          var morph1 = dom.createMorphAt(dom.childAt(element2, [0]),0,0);\n          var morph2 = dom.createMorphAt(element3,0,0);\n          var attrMorph1 = dom.createAttrMorph(element3, 'href');\n          attribute(env, attrMorph0, element1, \"src\", get(env, context, \"tweet.profile_image\"));\n          content(env, morph0, context, \"tweet.screen_name\");\n          content(env, morph1, context, \"tweet.text\");\n          attribute(env, attrMorph1, element3, \"href\", get(env, context, \"tweet.url\"));\n          content(env, morph2, context, \"tweet.created_at\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.12.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"ul\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"h1\");\n        dom.setAttribute(el1,\"style\",\"clear:both\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, inline = hooks.inline, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        var morph2 = dom.createMorphAt(fragment,3,3,contextualElement);\n        dom.insertBoundary(fragment, null);\n        block(env, morph0, context, \"each\", [get(env, context, \"model\")], {\"keyword\": \"tweet\"}, child0, null);\n        inline(env, morph1, context, \"infinity-loader\", [], {\"infinityModel\": get(env, context, \"model\")});\n        content(env, morph2, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('ember-hatorade/templates/tweets', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.12.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"li\");\n          dom.setAttribute(el1,\"class\",\"media row list-group-item col-lg-12\");\n          var el2 = dom.createElement(\"img\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"h4\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"p\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"a\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, attribute = hooks.attribute, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [0]);\n          var element1 = dom.childAt(element0, [0]);\n          var element2 = dom.childAt(element0, [3]);\n          var attrMorph0 = dom.createAttrMorph(element1, 'src');\n          var morph0 = dom.createMorphAt(dom.childAt(element0, [1]),0,0);\n          var morph1 = dom.createMorphAt(dom.childAt(element0, [2]),0,0);\n          var morph2 = dom.createMorphAt(element2,0,0);\n          var attrMorph1 = dom.createAttrMorph(element2, 'href');\n          attribute(env, attrMorph0, element1, \"src\", get(env, context, \"tweet.profile_image\"));\n          content(env, morph0, context, \"tweet.screen_name\");\n          content(env, morph1, context, \"tweet.text\");\n          attribute(env, attrMorph1, element2, \"href\", get(env, context, \"tweet.url\"));\n          content(env, morph2, context, \"tweet.created_at\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.12.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"ul\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),0,0);\n        var morph1 = dom.createMorphAt(fragment,1,1,contextualElement);\n        dom.insertBoundary(fragment, null);\n        block(env, morph0, context, \"each\", [get(env, context, \"model\")], {\"keyword\": \"tweet\"}, child0, null);\n        content(env, morph1, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('ember-hatorade/tests/adapters/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/application.js should pass jshint', function() { \n    ok(true, 'adapters/application.js should pass jshint.'); \n  });\n\n});","define('ember-hatorade/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('ember-hatorade/tests/controllers/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/application.js should pass jshint', function() { \n    ok(false, 'controllers/application.js should pass jshint.\\ncontrollers/application.js: line 1, col 16, \\'Ember\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('ember-hatorade/tests/controllers/stream.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/stream.js should pass jshint', function() { \n    ok(false, 'controllers/stream.js should pass jshint.\\ncontrollers/stream.js: line 7, col 16, Missing semicolon.\\ncontrollers/stream.js: line 26, col 36, Missing semicolon.\\ncontrollers/stream.js: line 7, col 5, \\'self\\' is not defined.\\ncontrollers/stream.js: line 9, col 22, \\'Faye\\' is not defined.\\ncontrollers/stream.js: line 12, col 26, \\'self\\' is not defined.\\ncontrollers/stream.js: line 13, col 9, \\'self\\' is not defined.\\ncontrollers/stream.js: line 26, col 5, \\'self\\' is not defined.\\ncontrollers/stream.js: line 10, col 10, \\'subscription\\' is defined but never used.\\ncontrollers/stream.js: line 11, col 13, \\'data\\' is defined but never used.\\ncontrollers/stream.js: line 12, col 13, \\'serializer\\' is defined but never used.\\n\\n10 errors'); \n  });\n\n});","define('ember-hatorade/tests/helpers/resolver', ['exports', 'ember/resolver', 'ember-hatorade/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('ember-hatorade/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('ember-hatorade/tests/helpers/start-app', ['exports', 'ember', 'ember-hatorade/app', 'ember-hatorade/router', 'ember-hatorade/config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('ember-hatorade/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('ember-hatorade/tests/models/hashtag.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/hashtag.js should pass jshint', function() { \n    ok(true, 'models/hashtag.js should pass jshint.'); \n  });\n\n});","define('ember-hatorade/tests/models/tweet.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/tweet.js should pass jshint', function() { \n    ok(true, 'models/tweet.js should pass jshint.'); \n  });\n\n});","define('ember-hatorade/tests/models/tweets.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/tweets.js should pass jshint', function() { \n    ok(true, 'models/tweets.js should pass jshint.'); \n  });\n\n});","define('ember-hatorade/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('ember-hatorade/tests/routes/about.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/about.js should pass jshint', function() { \n    ok(true, 'routes/about.js should pass jshint.'); \n  });\n\n});","define('ember-hatorade/tests/routes/hashtags.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/hashtags.js should pass jshint', function() { \n    ok(true, 'routes/hashtags.js should pass jshint.'); \n  });\n\n});","define('ember-hatorade/tests/routes/home.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/home.js should pass jshint', function() { \n    ok(true, 'routes/home.js should pass jshint.'); \n  });\n\n});","define('ember-hatorade/tests/routes/stream.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/stream.js should pass jshint', function() { \n    ok(false, 'routes/stream.js should pass jshint.\\nroutes/stream.js: line 10, col 178, Missing semicolon.\\nroutes/stream.js: line 11, col 37, Missing semicolon.\\nroutes/stream.js: line 12, col 61, Missing semicolon.\\nroutes/stream.js: line 13, col 48, Missing semicolon.\\nroutes/stream.js: line 12, col 7, \\'funtimes\\' is not defined.\\nroutes/stream.js: line 13, col 39, \\'funtimes\\' is not defined.\\n\\n6 errors'); \n  });\n\n});","define('ember-hatorade/tests/routes/tweets.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/tweets.js should pass jshint', function() { \n    ok(false, 'routes/tweets.js should pass jshint.\\nroutes/tweets.js: line 5, col 36, Missing semicolon.\\n\\n1 error'); \n  });\n\n});","define('ember-hatorade/tests/test-helper', ['ember-hatorade/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('ember-hatorade/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('ember-hatorade/tests/unit/adapters/application-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('adapter:application', 'Unit | Adapter | application', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['serializer:foo']\n\n});","define('ember-hatorade/tests/unit/adapters/application-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/adapters');\n  test('unit/adapters/application-test.js should pass jshint', function() { \n    ok(true, 'unit/adapters/application-test.js should pass jshint.'); \n  });\n\n});","define('ember-hatorade/tests/unit/controllers/stream-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('controller:stream', {});\n\n  // Replace this with your real tests.\n  ember_qunit.test('it exists', function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('ember-hatorade/tests/unit/controllers/stream-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/stream-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/stream-test.js should pass jshint.'); \n  });\n\n});","define('ember-hatorade/tests/unit/models/hashtags-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('hashtags', 'Unit | Model | hashtags', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('ember-hatorade/tests/unit/models/hashtags-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/hashtags-test.js should pass jshint', function() { \n    ok(true, 'unit/models/hashtags-test.js should pass jshint.'); \n  });\n\n});","define('ember-hatorade/tests/unit/models/tweet-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('tweet', 'Unit | Model | tweet', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('ember-hatorade/tests/unit/models/tweet-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/tweet-test.js should pass jshint', function() { \n    ok(true, 'unit/models/tweet-test.js should pass jshint.'); \n  });\n\n});","define('ember-hatorade/tests/unit/models/tweets-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForModel('tweets', 'Unit | Model | tweets', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  ember_qunit.test('it exists', function (assert) {\n    var model = this.subject();\n    // var store = this.store();\n    assert.ok(!!model);\n  });\n\n});","define('ember-hatorade/tests/unit/models/tweets-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/models');\n  test('unit/models/tweets-test.js should pass jshint', function() { \n    ok(true, 'unit/models/tweets-test.js should pass jshint.'); \n  });\n\n});","define('ember-hatorade/tests/unit/routes/about-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:about', 'Unit | Route | about', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('ember-hatorade/tests/unit/routes/about-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/about-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/about-test.js should pass jshint.'); \n  });\n\n});","define('ember-hatorade/tests/unit/routes/hashtags-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:hashtags', 'Unit | Route | hashtags', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('ember-hatorade/tests/unit/routes/hashtags-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/hashtags-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/hashtags-test.js should pass jshint.'); \n  });\n\n});","define('ember-hatorade/tests/unit/routes/home-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:home', 'Unit | Route | home', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('ember-hatorade/tests/unit/routes/home-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/home-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/home-test.js should pass jshint.'); \n  });\n\n});","define('ember-hatorade/tests/unit/routes/stream-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:stream', 'Unit | Route | stream', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('ember-hatorade/tests/unit/routes/stream-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/stream-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/stream-test.js should pass jshint.'); \n  });\n\n});","define('ember-hatorade/tests/unit/routes/tweets-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor('route:tweets', 'Unit | Route | tweets', {});\n\n  ember_qunit.test('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('ember-hatorade/tests/unit/routes/tweets-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/tweets-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/tweets-test.js should pass jshint.'); \n  });\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('ember-hatorade/config/environment', ['ember'], function(Ember) {\n  var prefix = 'ember-hatorade';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"ember-hatorade/tests/test-helper\");\n} else {\n  require(\"ember-hatorade/app\")[\"default\"].create({\"name\":\"ember-hatorade\",\"version\":\"0.0.0.c33507f0\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjhpnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"ember-hatorade.js"}